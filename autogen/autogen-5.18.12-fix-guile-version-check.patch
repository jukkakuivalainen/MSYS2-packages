--- autogen-5.18.12/config/guile-orig.m4	2017-11-21 15:23:45.047606700 -0500
+++ autogen-5.18.12/config/guile.m4	2017-11-21 15:24:20.414686700 -0500
@@ -47,7 +47,7 @@
 # for an available version of Guile.
 #
 # By default, this macro will search for the latest stable version of
-# Guile (e.g. 2.0), falling back to the previous stable version
+# Guile (e.g. 2.2), falling back to the previous stable version
 # (e.g. 1.8) if it is available.  If no guile-@var{VERSION}.pc file is
 # found, an error is signalled.  The found version is stored in
 # @var{GUILE_EFFECTIVE_VERSION}.
@@ -61,7 +61,7 @@
 #
 AC_DEFUN([GUILE_PKG],
  [PKG_PROG_PKG_CONFIG
-  _guile_versions_to_search="m4_default([$1], [2.0 1.8])"
+  _guile_versions_to_search="m4_default([$1], [2.2 1.8])"
   if test -n "$GUILE_EFFECTIVE_VERSION"; then
     _guile_tmp=""
     for v in $_guile_versions_to_search; do
@@ -184,7 +184,7 @@
 # If @code{guile} is not found, signal an error.
 #
 # By default, this macro will search for the latest stable version of
-# Guile (e.g. 2.0). x.y or x.y.z versions can be specified. If an older
+# Guile (e.g. 2.2). x.y or x.y.z versions can be specified. If an older
 # version is found, the macro will signal an error.
 #
 # The effective version of the found @code{guile} is set to
@@ -201,7 +201,7 @@
  [AC_PATH_PROG(GUILE,guile)
   _guile_required_version="m4_default([$1], [$GUILE_EFFECTIVE_VERSION])"
   if test -z "$_guile_required_version"; then
-    _guile_required_version=2.0
+    _guile_required_version=2.2
   fi
   if test "$GUILE" = "" ; then
       AC_MSG_ERROR([guile required but not found])
